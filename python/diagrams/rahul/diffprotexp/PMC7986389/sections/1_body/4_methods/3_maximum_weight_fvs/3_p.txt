0: ILP3:\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\begin{array}{*{20}c} \textbf{Maximize} & \Sigma w_i x_i \\ \textbf{Subject to} & k_i-k_j+nx_i \ge 1 \: \forall (v_i,v_j)\in E \\ & \textbf{where} \: 0 \le k_i \le n-1 \: \textbf{and} \: x_i \: \textbf{is\, Boolean} \end{array}$$\end{document}MaximizewixiSubjecttoki-kj+nxi1(vi,vj)Ewhere0kin-1andxiisBooleanHowever, simply removing the constraint  \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\Sigma x_i =s$$\end{document}xi=s may lead to a trivial solution when the weights of the vertices are positive, since the set of all vertices will always be a WFVS.
1: Here we consider two methods to avoid the trivial solution:  Modify all weights to be negative.
2: Assume the maximum weight of the vertices is     \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$w_m$$\end{document}wm; then, for each weight     \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$w_i$$\end{document}wi, modify it to     \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$w_i:=w_i-w_m-\epsilon$$\end{document}wi:=wi-wm-.
3: Here,     \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\epsilon$$\end{document} is a small positive constant to ensure that all weights are negative.
4: The ILP is the same as ILP3.
5: Reverse the weights to penalty values.
6: We can simply do this by taking the inverse of each     \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$w_i$$\end{document}wi, i.e.,     \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\begin{aligned} p_i=\left\{ \begin{array}{ll} \frac{1}{w_i} &{} \mathbf{if} \, w_i \ne 0 \\ \infty &{} \mathbf{if} \, w_i = 0 \end{array} \right.
7: \end{aligned}$$\end{document}pi=1wiifwi=0ifwi=0 Then, modify the ILP3 formula as follows:     ILP3:\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\begin{array}{*{20}c} \textbf{Minimize} & \Sigma p_i x_i \\ \textbf{Subject to} & k_i-k_j+nx_i \ge 1 \: \forall (v_i,v_j)\in E\\ & \textbf{where} \: 0 \le k_i \le n-1 \: \textbf{and} \: x_i \: \textbf{is \,Boolean} \end{array}$$\end{document}MinimizepixiSubjecttoki-kj+nxi1(vi,vj)Ewhere0kin-1andxiisBooleanIn our research, we examined both ways of calculating the weights in the WFVS method.
8: We found that the first modification is more unstable when running the ILP process, i.e., more obviously wrong ILP results appeared.
9: Thus, we chose to use the second method to compute the weights in the WFVS method; i.e., we reversed the weights to be penalty values, which are always positive values.
